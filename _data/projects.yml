- name: Visualizing the mood of Indian Politics
  time: July 2018
  url: https://beautiful-olympic-21495.herokuapp.com/
  tagline: sentiment analysis of Indian politics using tweets 
  tools: Dash (Plotly), Python, Heroku
  description: |
    An application that takes a text input from the user, parses through all the scraped tweets and displays the associated sentiment. vaderSentiment is used to assign polarity to a tweet, and the app hosted on a Heroku dyno. 
  github:
    url: https://github.com/rohitgupta91/polity_senti
   # branch: 

- name: The Wrath of Terror in the US
  time: December 2017
  url: https://public.tableau.com/profile/rohit.gupta6756#!/vizhome/project_draft9_0/USStory?publish=yes
  tagline: an intuitive visualization to assess the impact of terror
  tools: Tableau, R
  description: |
    A tableau dashboard to provide a brief overview of the terror situation in the US since 2001.
  #github:
   # url: 
   # branch: 

- name: Catfight
  time: November 2016
  url:
  tagline: semi-supervised classifier running on liblinear
  tools: Python, R, Linux, AWS
  description: |
    Semi-supervised classification algorithm based on Support Vector Machines to classify e-commerce product names into 24 distinct categories (one-vs-all) using bag-of-words representation. Utilized 15M+ unique unlabeled product descriptions with 70K labeled examples to achieve a classification accuracy of 97%.
  #github:
   # url: 
   # branch: 

- name: Black sheeps in E-Commerce
  time: February 2016
  url:
  tagline: predicting the returns for cash-on-delivery shipments 
  tools: R, Python, MongoDB, Linux, AWS
  description: |
    Higher return rates for e-commerce cash-on-delivery shipments in India. Created a database for transaction history of >30M unique customers. Brainstormed hypotheses and developed an issue tree to identify major factors. Employed various ML techniques to determine the propensity of return (Logistic Regression, Decision Trees, Support Vector Machines, Neural Networks).    
  #github:
   # url: 
   # branch: 
   
- name: Business Intelligence stack
  time: October 2015
  url:
  tagline: making business intelligence scalable, quick and easy 
  tools: Pentaho, R, Python, MongoDB, Linux, AWS, PostgreSQL
  description: |
    Identified data requirements of stakeholders. Fetched data from NoSQL, manipulated through R and pushed to SQL database. Defined mondrian schemas and ETL processes. Synced data through DropBox for "on-the-fly" requirements. Automated the procedure through cron jobs. Intuitive UI through Saiku to aggregate huge amounts of data to encourage/simplify independent analysis. Reduced turnaround time from ~3days to <15 minutes. 
  #github:
   # url: 
   # branch: 
   
- name: Trend of incoming calls  
  time: February 2015
  url:
  tagline: predicting no. of support calls over lifetime of a product to help plan expenditure for a Fortune 10 client  
  tools: R, Excel, SQL Workbench/J
  description: |
    Identified major factors affecting support calls volume. Split the volume for different issues based on fundamental difference in call trends. Employed various non-linear modelling techniques and achieved a high goodness of fit.   
  #github:
   # url: 
   # branch:

- name: Dynamic pricing strategy
  time: July 2014
  url:
  tagline: deciding prices based on demand/supply for a major player in secondary ticket market   
  tools: R, Excel, Teradata, Powerpoint
  description: |
    Employed price elasticity principle for deciding on the ideal commission to be charged from the ticket buyer. Suggested improvements for storing key variables in the primary price database. Identified and verified good proxies for unavailable data.   
  #github:
   # url: 
   # branch:

- name: Sales of heavy mechanical equipment
  time: April 2014
  url:
  tagline: identifying effect of macro-economic trends on sales for a leading construction/mining manufacturer
  tools: R, Excel
  description: |
    Brainstormed and listed hypotheses about factors that affect sales of construction equipment. Scouted for open source US data to explain the monthly sales over years (number of homes built, new planned construction sites, disasters etc). Used a time-series technique (ARIMAx) to predict sales of a wheel loader.    
  #github:
   # url: 
   # branch:
